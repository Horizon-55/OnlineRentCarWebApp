// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineRentCar.Data;

#nullable disable

namespace OnlineRentCar.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230627172210_ChangePkFkRentReturns")]
    partial class ChangePkFkRentReturns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineRentCar.Models.AdminData", b =>
                {
                    b.Property<string>("LoginAdmin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordAdmin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginAdmin");

                    b.ToTable("admindata");
                });

            modelBuilder.Entity("OnlineRentCar.Models.Car", b =>
                {
                    b.Property<string>("LNumberTb")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BrandTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineCapalityTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhostTypeTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachinebodyTypeTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPassagerCarsTb")
                        .HasColumnType("int");

                    b.Property<int>("PriceTb")
                        .HasColumnType("int");

                    b.Property<string>("StatusTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeGearBoxTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfFuelTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LNumberTb");

                    b.ToTable("cars");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Car");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OnlineRentCar.Models.Rent", b =>
                {
                    b.Property<int>("RentId")
                        .HasColumnType("int");

                    b.Property<string>("Car")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Fees")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("RentTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ReturnDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RentId");

                    b.HasIndex("Car")
                        .IsUnique();

                    b.HasIndex("User");

                    b.ToTable("RentCars");
                });

            modelBuilder.Entity("OnlineRentCar.Models.Returns", b =>
                {
                    b.Property<int>("RentId")
                        .HasColumnType("int");

                    b.Property<string>("Car")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Delay")
                        .HasColumnType("int");

                    b.Property<int>("Fine")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RentId");

                    b.HasIndex("Car")
                        .IsUnique();

                    b.HasIndex("User");

                    b.ToTable("ReturnsCars");
                });

            modelBuilder.Entity("OnlineRentCar.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateLoginTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatePasswordTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneCustomerTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_AddreessTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("СustomerFullNameTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineRentCar.Models.Crossover", b =>
                {
                    b.HasBaseType("OnlineRentCar.Models.Car");

                    b.Property<string>("GhostTypeCrossoverTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachinebodyTypeCrossoverTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Crossover");
                });

            modelBuilder.Entity("OnlineRentCar.Models.ElectroCar", b =>
                {
                    b.HasBaseType("OnlineRentCar.Models.Car");

                    b.Property<string>("MachinebodytypeElectro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeFuelElectro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ElectroCar");
                });

            modelBuilder.Entity("OnlineRentCar.Models.Minivan", b =>
                {
                    b.HasBaseType("OnlineRentCar.Models.Car");

                    b.Property<string>("MachinebodytypeMinivan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberofpassagercarsForMinivan")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Minivan");
                });

            modelBuilder.Entity("OnlineRentCar.Models.Sport", b =>
                {
                    b.HasBaseType("OnlineRentCar.Models.Car");

                    b.Property<string>("EngineCapacitySportCarTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachinebodyTypeSportTb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Sport");
                });

            modelBuilder.Entity("OnlineRentCar.Models.Rent", b =>
                {
                    b.HasOne("OnlineRentCar.Models.Car", "Cars")
                        .WithOne("Rent")
                        .HasForeignKey("OnlineRentCar.Models.Rent", "Car")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineRentCar.Models.User", "Users")
                        .WithMany("Rent")
                        .HasForeignKey("User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("OnlineRentCar.Models.Returns", b =>
                {
                    b.HasOne("OnlineRentCar.Models.Car", "Cars")
                        .WithOne("Returns")
                        .HasForeignKey("OnlineRentCar.Models.Returns", "Car")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineRentCar.Models.User", "Users")
                        .WithMany("Returns")
                        .HasForeignKey("User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("OnlineRentCar.Models.Car", b =>
                {
                    b.Navigation("Rent");

                    b.Navigation("Returns");
                });

            modelBuilder.Entity("OnlineRentCar.Models.User", b =>
                {
                    b.Navigation("Rent");

                    b.Navigation("Returns");
                });
#pragma warning restore 612, 618
        }
    }
}
